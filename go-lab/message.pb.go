// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	MessageRequest
	MessageResponse
	CheckResponse
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckResponse_ServingStatus int32

const (
	CheckResponse_UNKNOWN     CheckResponse_ServingStatus = 0
	CheckResponse_SERVING     CheckResponse_ServingStatus = 1
	CheckResponse_NOT_SERVING CheckResponse_ServingStatus = 2
)

var CheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}
var CheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x CheckResponse_ServingStatus) String() string {
	return proto.EnumName(CheckResponse_ServingStatus_name, int32(x))
}
func (CheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type MessageRequest struct {
	Label string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
}

func (m *MessageRequest) Reset()                    { *m = MessageRequest{} }
func (m *MessageRequest) String() string            { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()               {}
func (*MessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MessageRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type MessageResponse struct {
	Label   string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
}

func (m *MessageResponse) Reset()                    { *m = MessageResponse{} }
func (m *MessageResponse) String() string            { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()               {}
func (*MessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MessageResponse) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MessageResponse) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

type CheckResponse struct {
	Status CheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,enum=main.CheckResponse_ServingStatus" json:"status,omitempty"`
}

func (m *CheckResponse) Reset()                    { *m = CheckResponse{} }
func (m *CheckResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()               {}
func (*CheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CheckResponse) GetStatus() CheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return CheckResponse_UNKNOWN
}

func init() {
	proto.RegisterType((*MessageRequest)(nil), "main.MessageRequest")
	proto.RegisterType((*MessageResponse)(nil), "main.MessageResponse")
	proto.RegisterType((*CheckResponse)(nil), "main.CheckResponse")
	proto.RegisterEnum("main.CheckResponse_ServingStatus", CheckResponse_ServingStatus_name, CheckResponse_ServingStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MessageService service

type MessageServiceClient interface {
	UpdateMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageResponse, error)
	CheckMessage(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*CheckResponse, error)
}

type messageServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageServiceClient(cc *grpc.ClientConn) MessageServiceClient {
	return &messageServiceClient{cc}
}

func (c *messageServiceClient) UpdateMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := grpc.Invoke(ctx, "/main.MessageService/UpdateMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) CheckMessage(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := grpc.Invoke(ctx, "/main.MessageService/CheckMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MessageService service

type MessageServiceServer interface {
	UpdateMessage(context.Context, *MessageRequest) (*MessageResponse, error)
	CheckMessage(context.Context, *google_protobuf.Empty) (*CheckResponse, error)
}

func RegisterMessageServiceServer(s *grpc.Server, srv MessageServiceServer) {
	s.RegisterService(&_MessageService_serviceDesc, srv)
}

func _MessageService_UpdateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).UpdateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.MessageService/UpdateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).UpdateMessage(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_CheckMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).CheckMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.MessageService/CheckMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).CheckMessage(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.MessageService",
	HandlerType: (*MessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateMessage",
			Handler:    _MessageService_UpdateMessage_Handler,
		},
		{
			MethodName: "CheckMessage",
			Handler:    _MessageService_CheckMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x14, 0xc4, 0xbb, 0x55, 0x5b, 0x7c, 0x35, 0x6d, 0x59, 0xab, 0x94, 0x7a, 0xa9, 0x7b, 0x90, 0x9e,
	0xb6, 0x50, 0x4f, 0x0a, 0x0a, 0x22, 0x45, 0x44, 0x4c, 0x21, 0xb1, 0x7a, 0x94, 0x4d, 0xfa, 0x8c,
	0xc5, 0xfc, 0x33, 0xbb, 0x11, 0xfc, 0x02, 0x5e, 0xfd, 0xca, 0x92, 0xdd, 0x26, 0x10, 0xe9, 0xf1,
	0xcd, 0xfe, 0x66, 0x98, 0x1d, 0xb0, 0x22, 0x94, 0x52, 0x04, 0xc8, 0xd3, 0x2c, 0x51, 0x09, 0xdd,
	0x8d, 0xc4, 0x3a, 0x1e, 0x9d, 0x04, 0x49, 0x12, 0x84, 0x38, 0xd5, 0x9a, 0x97, 0xbf, 0x4d, 0x31,
	0x4a, 0xd5, 0xb7, 0x41, 0xd8, 0x19, 0x74, 0x1f, 0x8d, 0xc7, 0xc1, 0xcf, 0x1c, 0xa5, 0xa2, 0x03,
	0xd8, 0x0b, 0x85, 0x87, 0xe1, 0x90, 0x8c, 0xc9, 0x64, 0xdf, 0x31, 0x07, 0xbb, 0x81, 0x5e, 0xc5,
	0xc9, 0x34, 0x89, 0x25, 0x6e, 0x07, 0xe9, 0x10, 0xda, 0x7e, 0x86, 0x42, 0xe1, 0x6a, 0xd8, 0x1c,
	0x93, 0xc9, 0x8e, 0x53, 0x9e, 0xec, 0x87, 0x80, 0x75, 0xfb, 0x8e, 0xfe, 0x47, 0x95, 0x70, 0x01,
	0x2d, 0xa9, 0x84, 0xca, 0xa5, 0x8e, 0xe8, 0xce, 0x4e, 0x79, 0x51, 0x98, 0xd7, 0x20, 0xee, 0x62,
	0xf6, 0xb5, 0x8e, 0x03, 0x57, 0x83, 0xce, 0xc6, 0xc0, 0x2e, 0xc1, 0xaa, 0x3d, 0xd0, 0x0e, 0xb4,
	0x97, 0xf6, 0x83, 0xbd, 0x78, 0xb1, 0xfb, 0x8d, 0xe2, 0x70, 0xe7, 0xce, 0xf3, 0xbd, 0x7d, 0xd7,
	0x27, 0xb4, 0x07, 0x1d, 0x7b, 0xf1, 0xf4, 0x5a, 0x0a, 0xcd, 0xd9, 0x2f, 0xa9, 0x3e, 0xad, 0x33,
	0x7c, 0xa4, 0xd7, 0x60, 0x2d, 0xd3, 0x95, 0x50, 0xb8, 0xd1, 0xe9, 0xc0, 0x54, 0xa9, 0x6f, 0x33,
	0x3a, 0xfa, 0xa7, 0x9a, 0x8a, 0xac, 0x41, 0xaf, 0xe0, 0x40, 0xb7, 0x2e, 0xed, 0xc7, 0xdc, 0x8c,
	0xce, 0xcb, 0xd1, 0xf9, 0xbc, 0x18, 0x7d, 0x74, 0xb8, 0xe5, 0x87, 0xac, 0xe1, 0xb5, 0x34, 0x76,
	0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x13, 0x4d, 0x33, 0xb3, 0xc0, 0x01, 0x00, 0x00,
}
